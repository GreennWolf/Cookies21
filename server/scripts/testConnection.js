/**
 * Script de Prueba de Conexi√≥n MongoDB
 * 
 * Este script verifica que la conexi√≥n a MongoDB funcione correctamente
 * antes de ejecutar las migraciones.
 * 
 * Uso: node scripts/testConnection.js
 */

// Cargar variables de entorno
require('dotenv').config();

const mongoose = require('mongoose');

// Funci√≥n para probar la conexi√≥n
const testConnection = async () => {
  try {
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/cookies21';
    
    console.log('üß™ Probando conexi√≥n a MongoDB...');
    console.log('üìç URI:', mongoUri.replace(/\/\/.*:.*@/, '//***:***@')); // Ocultar credenciales
    console.log('üåç Entorno:', process.env.NODE_ENV || 'development');
    
    // Intentar conectar
    await mongoose.connect(mongoUri, {
      useNewUrlParser: true,
      useUnifiedTopology: true,
      serverSelectionTimeoutMS: 10000, // 10 segundos de timeout
      socketTimeoutMS: 45000,
    });
    
    console.log('‚úÖ Conexi√≥n exitosa a MongoDB');
    
    // Probar operaci√≥n b√°sica
    const db = mongoose.connection.db;
    const collections = await db.listCollections().toArray();
    
    console.log('üìä Base de datos:', db.databaseName);
    console.log('üìÅ Colecciones encontradas:', collections.length);
    
    // Buscar colecci√≥n de banners espec√≠ficamente
    const bannerCollection = collections.find(col => col.name === 'bannertemplates');
    if (bannerCollection) {
      console.log('üéØ Colecci√≥n de banners encontrada: bannertemplates');
      
      // Contar documentos
      const count = await db.collection('bannertemplates').countDocuments();
      console.log('üìã Total de banners en la base de datos:', count);
      
      if (count > 0) {
        console.log('‚úÖ Base de datos lista para migraci√≥n');
      } else {
        console.log('‚ö†Ô∏è No hay banners en la base de datos');
      }
    } else {
      console.log('‚ö†Ô∏è Colecci√≥n de banners no encontrada');
      console.log('üìÅ Colecciones disponibles:', collections.map(c => c.name));
    }
    
  } catch (error) {
    console.error('‚ùå Error en la conexi√≥n:', error.message);
    
    // Mostrar detalles espec√≠ficos del error
    if (error.code === 13) {
      console.error('üîê Error de autenticaci√≥n:');
      console.error('   - Verifica usuario y contrase√±a');
      console.error('   - Verifica authSource en la URI');
    } else if (error.code === 'ECONNREFUSED') {
      console.error('üîå Error de conexi√≥n:');
      console.error('   - MongoDB no est√° ejecut√°ndose');
      console.error('   - Verifica la direcci√≥n y puerto');
    } else {
      console.error('üîç C√≥digo de error:', error.code);
    }
    
    process.exit(1);
  } finally {
    await mongoose.disconnect();
    console.log('üì¶ Desconectado de MongoDB');
  }
};

// Ejecutar prueba
testConnection();